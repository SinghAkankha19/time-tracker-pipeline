trigger: none

pool:
  name: 'Default'

variables:
  organization: 'adiraazad180822'
  project: 'ADO'
  branch: 'refs/heads/main'

steps:
- task: PowerShell@2
  displayName: 'Get pipeline runs between 7AM and 8AM'
  inputs:
    pwsh: true
    targetType: 'inline'
    script: |
      $ErrorActionPreference = 'Stop'

      $now = Get-Date
      $today = $now.Date
      $startTimeLocal = $today.AddHours(7)  # 7 AM
      $endTimeLocal = $today.AddHours(8)    # 8 AM

      $startTime = $startTimeLocal.ToUniversalTime().ToString("o")
      $endTime = $endTimeLocal.ToUniversalTime().ToString("o")

      Write-Host " Querying runs between $startTimeLocal (7PM) and $endTimeLocal (8PM) Local Time"
      Write-Host " Converted to UTC: $startTime to $endTime"

      $organization = "$(organization)"
      $project = "$(project)"
      $branch = "$(branch)"
      $token = "$(System.AccessToken)"

      $url = "https://dev.azure.com/$organization/$project/_apis/build/builds?minTime=$startTime&maxTime=$endTime&branchName=$branch&api-version=7.1-preview.7"

      Write-Host "Calling Azure DevOps REST API:"
      Write-Host $url

      $headers = @{
        Authorization = "Bearer $token"
      }

      $outputFile = "$(Build.ArtifactStagingDirectory)\pipeline_runs.md"

      $lines = @()

      try {
        $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get

        if ($response.count -eq 0) {
          Write-Host " No pipeline runs found in this time window."
          $lines += "No pipeline runs found between $startTimeLocal and $endTimeLocal"
        } else {
          Write-Host " Pipelines run between 7PM and 8PM (IST):"
          $lines += "Pipeline runs between 7PM and 8PM (IST):"

          $response.value | ForEach-Object {
            $pipelineName = $_.definition.name
            $runTimeUtc = [datetime]$_.startTime
            $runTimeIST = $runTimeUtc.AddHours(5.5)

            Write-Host "- $pipelineName at $runTimeIST (IST)"
            $lines += "- $pipelineName at $runTimeIST (IST)"
          }
        }

        # Save to file
        $lines | Out-File -FilePath $outputFile -Encoding utf8

      } catch {
        Write-Host "Failed to call Azure DevOps API: $_"
        "Error: $_" | Out-File -FilePath $outputFile -Encoding utf8
      }

  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)

#  Publish the output file so itâ€™s downloadable from the pipeline run
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'pipeline-report'

- task: PowerShell@2
  displayName: 'Commit and push report to main branch'
  inputs:
    pwsh: true
    targetType: 'inline'
    script: |
      $ErrorActionPreference = 'Stop'

      git config --global user.email "akankshaazad19@gmail.com"
      git config --global user.name "SinghAkanksha19"

      # Build repo URL from environment variables
      $repoUrl = "https://$env:organization:$env:GitPAT@dev.azure.com/$env:organization/$env:project/_git/$env:project"
      $localRepoPath = "$(Build.SourcesDirectory)\tempRepo"

      git clone $repoUrl $localRepoPath
      cd $localRepoPath

      $reportDate = Get-Date -Format "yyyy-MM-dd"
      $targetDir = "$localRepoPath\reports\$reportDate"
      New-Item -ItemType Directory -Force -Path $targetDir | Out-Null

      Copy-Item "$(Build.ArtifactStagingDirectory)\reports\$reportDate\pipeline_runs.md" "$targetDir\pipeline_runs.md" -Force

      git add reports/
      git commit -m "Add pipeline report for $reportDate"
      git push origin main
  env:
    GitPAT: $(GitPAT)
    organization: $(organization)
    project: $(project)
